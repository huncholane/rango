openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/user/:
    get:
      operationId: listUsers
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
          description: ''
      tags:
      - User
    post:
      operationId: createUser
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: ''
      tags:
      - User
  /api/user/{id}/:
    get:
      operationId: retrieveUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: ''
      tags:
      - User
    put:
      operationId: updateUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: ''
      tags:
      - User
    patch:
      operationId: partialUpdateUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: ''
      tags:
      - User
    delete:
      operationId: destroyUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - User
  /api/auth/logout:
    get:
      operationId: retrieveLogout
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logout'
          description: ''
      tags:
      - Auth
  /api/auth/logged-in:
    get:
      operationId: retrieveLoggedIn
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logged-in'
          description: ''
      tags:
      - Auth
  /api/auth/login:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login'
          description: ''
      tags:
      - Auth
components:
  schemas:
    user:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - username
      - password
    logout:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
          default: Success
    logged-in:
      type: object
      properties:
        detail:
          type: boolean
          readOnly: true
          default: false
    login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - password
